// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

define(['apps/bills/list/templates', 'views/_base', 'msgbus', 'royalslider'], function(Templates, AppView, msgBus, royalSlider) {
  var BillsLayout, SlideItem, SliderView, _ref, _ref1, _ref2;
  SlideItem = (function(_super) {
    __extends(SlideItem, _super);

    function SlideItem() {
      _ref = SlideItem.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    SlideItem.prototype.template = Templates.slideItem;

    return SlideItem;

  })(AppView.ItemView);
  return {
    SliderView: SliderView = (function(_super) {
      __extends(SliderView, _super);

      function SliderView() {
        this.onCompositeRendered = __bind(this.onCompositeRendered, this);
        _ref1 = SliderView.__super__.constructor.apply(this, arguments);
        return _ref1;
      }

      SliderView.prototype.template = Templates.slider;

      SliderView.prototype.itemView = SlideItem;

      SliderView.prototype.itemViewContainer = "#panes";

      SliderView.prototype.slider = null;

      SliderView.prototype.onCompositeRendered = function() {
        return this.slider = this.$("#panes").royalSlider({
          autoHeight: true,
          keyboardNavEnabled: true,
          arrowsNav: false,
          navigateByClick: false,
          controlNavigation: 'none'
        }).data('royalSlider');
      };

      return SliderView;

    })(AppView.CompositeView),
    Layout: BillsLayout = (function(_super) {
      __extends(BillsLayout, _super);

      function BillsLayout() {
        _ref2 = BillsLayout.__super__.constructor.apply(this, arguments);
        return _ref2;
      }

      BillsLayout.prototype.template = Templates.layout;

      BillsLayout.prototype.regions = {
        searchRegion: "#search-region",
        billsRegion: "#bills-region"
      };

      return BillsLayout;

    })(AppView.Layout)
  };
});
