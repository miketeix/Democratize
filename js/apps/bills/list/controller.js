// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(["msgbus", "apps/bills/list/views", "controller/_base", "backbone", "obscura", 'royalslider'], function(msgBus, Views, AppController, Backbone, Obscura, royalSlider) {
  var Controller, _ref;
  return Controller = (function(_super) {
    __extends(Controller, _super);

    function Controller() {
      _ref = Controller.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Controller.prototype.initialize = function(options) {
      var _this = this;
      if (options == null) {
        options = {};
      }
      this.entities = msgBus.reqres.request("bill:entities");
      this.filtered = new Obscura(this.entities);
      msgBus.commands.setHandler("toggle:bills:region", function() {
        return _this.toggleBillsRegion();
      });
      msgBus.commands.setHandler("search:filter:bills", function(data) {
        return _this.refreshFilter(data);
      });
      this.layout = this.getLayoutView();
      this.listenTo(this.layout, "show", function() {
        _this.searchRegion();
        return _this.slideRegion();
      });
      return this.show(this.layout);
    };

    Controller.prototype.getLayoutView = function() {
      return new Views.Layout;
    };

    Controller.prototype.slideRegion = function() {
      var sliderView;
      sliderView = this.getSliderView(this.filtered);
      window.sliderView = sliderView;
      this.layout.billsRegion.show(sliderView);
      return sliderView.slider.updateSliderSize();
    };

    Controller.prototype.tileRegion = function() {
      var tileView;
      tileView = this.getTileView(this.filtered);
      return this.layout.billsRegion.show(tileView);
    };

    Controller.prototype.toggleBillsRegion = function() {
      if (this.layout.billsRegion.currentView instanceof Views.SliderView) {
        return this.tileRegion();
      } else {
        return this.slideRegion();
      }
    };

    Controller.prototype.searchRegion = function() {
      return msgBus.commands.execute("show:search", this.layout.searchRegion);
    };

    Controller.prototype.getTileView = function(collection) {
      return new Views.TileView({
        collection: collection
      });
    };

    Controller.prototype.getSliderView = function(collection) {
      return new Views.SliderView({
        collection: collection
      });
    };

    Controller.prototype.refreshFilter = function(data) {
      var filterKey, key;
      $('#panes').royalSlider('destroy').empty();
      filterKey;
      for (key in data) {
        filterKey = key;
      }
      switch (filterKey) {
        case "party":
          return this.filtered.filterBy('party', {
            party: data.party
          });
        case "filter":
          switch (data.filter) {
            case "all":
              return this.filtered.resetFilters();
            case "newest":
              return console.log("newest");
            case "popular":
              return console.log("popular");
            case "random":
              return console.log("random");
          }
          break;
        case "mp":
          return console.log("random");
        case "tag":
          return console.log(data);
        case "bill":
          return console.log("bill");
      }
    };

    return Controller;

  })(AppController);
});
