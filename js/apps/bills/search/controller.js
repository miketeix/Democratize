// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(["msgbus", "apps/bills/search/views", "controller/_base", "backbone"], function(msgBus, Views, AppController, Backbone) {
  var Controller, _ref;
  return Controller = (function(_super) {
    __extends(Controller, _super);

    function Controller() {
      _ref = Controller.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Controller.prototype.initialize = function(options) {
      var _this = this;
      if (options == null) {
        options = {};
      }
      this.entities = msgBus.reqres.request("menu:entities");
      this.layout = this.getLayoutView();
      this.listenTo(this.layout, "show", function() {
        _this.toggleRegion();
        _this.inputRegion();
        return _this.menuRegion();
      });
      this.listenTo(this.layout, "toggle:tile:view", function() {
        return msgBus.commands.execute("toggle:bills:region");
      });
      return this.show(this.layout);
    };

    Controller.prototype.menuRegion = function() {
      this.dropdown = this.getMenuView(this.entities);
      return this.layout.menuRegion.show(this.dropdown);
    };

    Controller.prototype.inputRegion = function() {
      this.inputBox = this.getInputView();
      return this.layout.inputRegion.show(this.inputBox);
    };

    Controller.prototype.toggleRegion = function() {
      this.tileToggle = this.getToggleView();
      return this.layout.toggleRegion.show(this.tileToggle);
    };

    Controller.prototype.getLayoutView = function() {
      return new Views.Layout;
    };

    Controller.prototype.getToggleView = function() {
      return new Views.ToggleView;
    };

    Controller.prototype.getInputView = function() {
      return new Views.InputView;
    };

    Controller.prototype.getMenuView = function(collection) {
      return new Views.MenuView({
        collection: collection
      });
    };

    return Controller;

  })(AppController);
});
