// Generated by CoffeeScript 1.6.3
var __slice = [].slice,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(["backbone.marionette", "text"], function(Marionette) {
  var AppCollectionView, AppCompositeView, AppItemView, AppLayout, _ref, _ref1, _ref2, _ref3, _remove;
  _remove = Marionette.View.prototype.remove;
  _.extend(Marionette.View.prototype, {
    addOpacityWrapper: function(init) {
      if (init == null) {
        init = true;
      }
      return this.$el.toggleWrapper({
        className: "opacity"
      }, init);
    },
    remove: function() {
      var args, wrapper, _ref,
        _this = this;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      if ((_ref = this.model) != null ? typeof _ref.isDestroyed === "function" ? _ref.isDestroyed() : void 0 : void 0) {
        wrapper = this.$el.toggleWrapper({
          className: "opacity",
          backgroundColor: "red"
        });
        wrapper.fadeOut(400, function() {
          return $(this).remove();
        });
        return this.$el.fadeOut(400, function() {
          return _remove.apply(_this, args);
        });
      } else {
        return _remove.apply(this, args);
      }
    },
    templateHelpers: function() {
      return {
        linkTo: function(name, url, options) {
          if (options == null) {
            options = {};
          }
          _.defaults(options, {
            external: false
          });
          if (!options.external) {
            url = "#" + url;
          }
          return "<a href='" + url + "'>" + (this.escape(name)) + "</a>";
        }
      };
    }
  });
  return {
    ItemView: AppItemView = (function(_super) {
      __extends(AppItemView, _super);

      function AppItemView() {
        _ref = AppItemView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      return AppItemView;

    })(Marionette.ItemView),
    CollectionView: AppCollectionView = (function(_super) {
      __extends(AppCollectionView, _super);

      function AppCollectionView() {
        _ref1 = AppCollectionView.__super__.constructor.apply(this, arguments);
        return _ref1;
      }

      AppCollectionView.prototype.itemViewEventPrefix = "childview";

      return AppCollectionView;

    })(Marionette.CollectionView),
    CompositeView: AppCompositeView = (function(_super) {
      __extends(AppCompositeView, _super);

      function AppCompositeView() {
        _ref2 = AppCompositeView.__super__.constructor.apply(this, arguments);
        return _ref2;
      }

      AppCompositeView.prototype.itemViewEventPrefix = "childview";

      return AppCompositeView;

    })(Marionette.CompositeView),
    Layout: AppLayout = (function(_super) {
      __extends(AppLayout, _super);

      function AppLayout() {
        _ref3 = AppLayout.__super__.constructor.apply(this, arguments);
        return _ref3;
      }

      return AppLayout;

    })(Marionette.Layout)
  };
});
